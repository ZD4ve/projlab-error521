@startuml classes
interface IActive {
    tick(dT)
}
class Tecton {
    growMushroom(Fungus)
    growMycelium(Fungus, Tecton)
    hasMyceliumTo(Tecton) : boolean
    canGrowMyceliumFrom(Fungus) : boolean
    removeInsect(Insect)
    addInsect(Insect)
    addNeighbor(Tecton)
    removeNeighbor(Tecton)
    fillWithStuff(Spore[], Mushroom, Insect[], Tecton[])
    distanceTo(Tecton) : int
    addSpore(Spore)
    newMe() : Tecton
}
class Fungus {
    canGrowMycelium() : boolean
    myceliumGrowthComplete()
    growMushroom(Tecton)
    growMycelium(Tecton, Tecton)
}
class Mycelium {
    Mycelium(Fungus,Tecton,Tecton)
    die()
}
class Mushroom {
    range
    cooldown
    Mushroom(Fungus, Tecton)
    burstSpore(Tecton)
    die()
}
class Spore {
    getEffect()
}
class Insect {
    cooldown
    speed
    antiChewCount
    isParalysed
    score
    eatSpore()
    moveTo(Tecton)
    chewMycelium(Mycelium)
    removeEffect(InsectEffect)
}
abstract InsectEffect {
    timeLeft
    {abstract} applyTo(Insect)
    {abstract} remove()
    {static} createEffect() : InsectEffect
}

IActive ()- Tecton
IActive ()- Mushroom
IActive ()- Mycelium
IActive ()- Insect
IActive ()- InsectEffect

Tecton o-- "*" Tecton : neighbors
Tecton "ends" o-- "mycelia" Mycelium
Tecton o-- "spores" Spore
Tecton "location" o-- "mushroom" Mushroom

Mycelium "mycelia" --* "species" Fungus
Insect "activeEffects" *-- "insect" InsectEffect
Insect "insects" --o "location" Tecton
Fungus "species" *-- "mushrooms" Mushroom
Spore --* "species" Fungus

@enduml