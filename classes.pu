@startuml classes
interface IActive {
    tick(dT)
}
'Addneighbor, remove, fill belement többet hogy jelölünk
'NEM E KELL RETURN TÍPUS'

'Dávid: kikommentelt fv-ek getter-setterek, elhagyhatjuk őket?
'takeSpore->eatspore diagram
'ha kell remove akkor removemushroom

'LÁTHATÓSÁG kell?
class Tecton {
    growMushroom(Fungus)
    growMycelium(Fungus, Tecton)
    hasMyceliumTo(Tecton)
    canGrowMyceliumFrom(Fungus)
    ' removeInsect(Insect)
    ' addInsect(Insect)
    ' addNeighbor(Tecton)
    ' removeNeighbor(Tecton)
    fillWithStuff(Spore[], Mushroom, Instect[], Tecton[])
    distanceTo(Tecton)
    ' addSpore(Spore)
    newMe()
}
class Fungus {
    canGrowMycelium()
    myceliumGrowthComplete()
    growMushroom(Tecton)
}
class Mycelium {
    cooldown
    die()
    create()
}
class Mushroom {
    range
    cooldown
    Mushroom(Fungus, Tecton)
    getLocation()
    ' setLocation(Tecton)
    burstSpore(Tecton)
    die()
}
class Spore

'Panni: ide nem írom ki a getter-settereket, elegek szntem az attribútumok
' +ha van removeEffect() akkor applyEffect() nincs? vagy azt a setIsParalysed() és a hasonlóak helyettesítik?
' +azt viszont nem tudom h az asszociációk setterei (pl setLocation) kellenek-e
' +az antiChewCount az hogyhogy counter és nem boolean?
' Mert ha több van rajta, akkor ha hamarabb lejáró levenné a régebben evett efektjét
class Insect {
    cooldown
    speed
    antiChewCount
    isParalysed
    score
    eatSpore()
    moveTo(Tecton)
    chewMycelium(Mycelium)
    ' removeEffect(InsectEffect)
    setLocation(Tecton)
}
abstract InsectEffect {
    timeLeft
    {abstract} applyTo(Insect)
    {abstract} remove()
    {static} createEffect()
}

IActive ()- Tecton
IActive ()- Mushroom
IActive ()- Mycelium
IActive ()- Insect
IActive ()- InsectEffect

Tecton o-- "*" Tecton : neighbors
Tecton "ends" o-- "mycelia" Mycelium
Tecton o-- "spores" Spore
Tecton "location" o-- "mushroom" Mushroom

Mycelium "mycelia" --* "species" Fungus

Insect "activeEffects" *-- "insect" InsectEffect
Insect "insects" --o "location" Tecton

Fungus "species" *-- "mushrooms" Mushroom

Spore --* "species" Fungus

@enduml