@startuml classes
interface IActive {
    tick(dT)
}
class Tecton {
    growMushroom(Fungus)
    growMycelium(Fungus, Tecton)
    hasMyceliumTo(Tecton)
    hasMushroomFrom(Fungus)
    canGetMycelium()
    removeInsect(Insect)
    addInsect(Insect)
    distanceTo(Tecton)
    addSpore(Spore)
}
class Fungus {
    canGrowMycelium()
}
class Mycelium {
    destroy()
    create()
}
class Mushroom {
    range
    Mushroom(Fungus, Tecton)
    getLocation()
    setLocation(Tecton)
    burstSpore(Tecton)
    die()
}
class Spore
class Insect {
    cooldown
    speed
    antiChewCount
    isParalysed
    score
    eatSpore()
    moveTo(Tecton)
    chewMycelium(Mycelium)
    removeEffect(InsectEffect)
}
abstract InsectEffect {
    timeLeft
    {abstract} applyTo(Insect)
    {abstract} remove()
}

IActive ()- Tecton
IActive ()- Mushroom
IActive ()- Mycelium
IActive ()- Insect
IActive ()- InsectEffect

Tecton o-- "*" Tecton : neighbors
Tecton "ends" o-- "mycelia" Mycelium
Tecton o-- "spores" Spore
Tecton "location" o-- "mushroom" Mushroom

Mycelium "mycelia" --* "species" Fungus

Insect "effects" *-- "insect" InsectEffect
Insect "insects" --o "location" Tecton

Fungus "species" *-- "mushrooms" Mushroom

Spore --* "species" Fungus

@enduml