@startuml classes
interface IActive
class Tecton
together {
    class Fungus
    class Mycelium
    class Mushroom
    class Spore
}
together {
    class Insect
    abstract InsectEffect
}

IActive : tick(dT)

IActive ()- Tecton
IActive ()- Mushroom
IActive ()- Mycelium
IActive ()- Insect
IActive ()- InsectEffect

Tecton o-- "*" Tecton : neighbors
Tecton "2" -- "*" Mycelium
Tecton *-- "*" Spore
Tecton "1" *--o "0..1" Mushroom
Tecton : growMushroom(Fungus)
Tecton : growMycelium(Fungus, Tecton)
Tecton : isNeighbor(Tecton)
Tecton : removeInsect(Insect)
Tecton : addInsect(Insect)

Mushroom : burstSpore(Tecton)

Mycelium o-- Fungus
Mycelium : destroy()

Insect *--o "*" InsectEffect : activeEffects
Insect "*" -- Tecton : location
Insect : cooldown
Insect : score
Insect : eatSpore()
Insect : moveTo(Tecton)
Insect : chewMycelium(Mycelium)

Spore o-- Fungus
Spore : getEffect()

InsectEffect <-- Spore
InsectEffect : applyTo(Insect)

Fungus -- Mushroom
@enduml