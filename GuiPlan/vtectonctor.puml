@startuml VTectonCtor
hide footbox

participant "dying:VTecton" as dying
participant "vtecton:VTecton" as vtecton
participant "map:Map" as map
collections "cells:Cell" as cells
collections "items:IIcon" as items
collections "neighbors:Cell" as neighbors
participant "tecton:Tecton" as tecton
participant "view:View" as view

create vtecton
dying -> vtecton : new(cells, tecton)
activate vtecton

loop cell in cells

    vtecton -> cells : getItem()
    activate cells
    return item
    vtecton -> items : getType()
    activate items
    return type

    alt type == VSpore
        note over vtecton : cast item to VSpore
        vtecton -> items : getSpore()
        activate items

        return spore

        note over vtecton : collect in spores set
    

    else type == VMushroom
        note over vtecton : cast item to VMushroom
        vtecton -> items : getMushroom()
        activate items

        return mushroom
        
        note over vtecton : collect in mushroom 
    

    else type == VInsect
        note over vtecton : cast item to VInsect
        vtecton -> items : getInsect()
        activate items

        return insect

        note over vtecton : collect in insects set
    end

    vtecton -> view : getMap()
    activate view
    return map
    vtecton -> map : getNeighbors(cell)
    activate map
    return neighbors

    loop neighbor in neighbors
        vtecton -> neighbors : getTecton()
        activate neighbors

        return neighborTecton
    
        note over vtecton : collect in neighborTectons set
    end
end

note over vtecton : remove tecton from neighborTectons

vtecton -> tecton : fillWithStuff(spores, mushroom, insects, neighborTectons, vtecton)
activate tecton
return

return
@enduml