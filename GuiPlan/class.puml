@startuml class
package model {
    !include ../SeqAndClassDiagrams/classes.puml
}
!include controller.puml 
package view{

class Cell{
    int x
    int y
    Cell(int x, int y, int size)
    {static} int size
    draw()
}
class Map{
    draw()
    Map(int n, int m)
    getNeighbors(Cell cell) : cell[]
    cellAt(int x, int y) : Cell
}

class VTecton{
    VTecton(Cell[] cells, Tecton tecton)
    getColor() : color
}
VTecton "1" --> "tecton 1" Tecton

interface IIcon{
    {abstract} getIcon() : icon or null if dead
    {abstract} getType() : Class
}

class VMycelium{
    VMycelium(Cell cell, Mycelium mycelium, Cell neighbor)
}
VMycelium "2" --> "mycelium 1" Mycelium

abstract VPlayer
{
    color: Color
    VPlayer()
    selectPlayer()
    {abstract} getType() : Class
}

class VInsect{
    VInsect(Cell cell, Insect insect)
    move(Cell cell)
    eat(Cell cell)
    chew(Cell cell)
}
VInsect "1" --> "insect 1" Insect

class VSpore{
    VSpore(Cell cell, Spore spore)
}
VSpore "1" --> "spore 1" Spore

class VMushroom{
    VMushroom(Cell cell, Mushroom mushroom)
    burst(Cell cell)
}
VMushroom "1" --> "mushroom 1" Mushroom 

class VFungus{
    VFungus(Fungus)
    growMushroom(Cell cell)
    growMycelium(Cell cella, Cell cellb)
}
VFungus "1" --> "fungus 1" Fungus

class VColony{
    VColony(Colony)
}
VColony "1" --> "colony 1" Colony

class View{
    remainingTime : double
    'called by clock
    View()
    redraw()
    create(int tecNum, int fungiNum, int colNum)
    'sound effect
    {static} notifyUser()
    click(int x, int y)
    endGame()
}
View "1" --> "selected 1" Cell
View "1" --> "selectedPlayer" VPlayer
View "1" --> "allFungi *" VFungus
View "1" --> "allColonies *" VColony
Controller "1" --> "view 1" View
}

View --> "map 1" Map

Cell "cells *" <-- "1" Map
Cell "cell 1" -- "item 1" IIcon
Cell "cells *" -- "tecton 1" VTecton

IIcon <|-- VMycelium
IIcon <|-- VInsect
IIcon <|-- VSpore
IIcon <|-- VMushroom

VPlayer <|-- VColony
VPlayer <|-- VFungus

VTecton --|> ITectonFiller
@enduml