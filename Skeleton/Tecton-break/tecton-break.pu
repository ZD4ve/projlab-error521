@startuml Tecton/tecton-break-seq
hide footbox

title INIT: Tecton-Break-Map

actor Tester
participant "tecton:Tecton" as Dying
participant "neighbor1:Tecton" as neighbor1
participant "neighbor2:Tecton" as neighbor2
participant "mycelia1:Mycelium" as mycelia1
participant "mycelia2:Mycelium" as mycelia2

participant "s1:Fungus" as s1

Tester -> Dying : tectonBreak(tecton)
activate Dying

    participant "m1:Mushroom" as mushroom
    Dying -> neighbor1 : removeNeighbor(tecton)
    activate neighbor1
    return

    Dying -> neighbor2 : removeNeighbor(tecton)
    activate neighbor2
    return

            Dying -> mycelia1 : die()

                activate mycelia1
                mycelia1 -> Dying : removeMycelium(mycelia1)
                activate Dying
                return
                mycelia1 -> neighbor1 : removeMycelium(mycelia1)
                activate neighbor1
                return
                mycelia1 -> s1 : removeMycelium(mycelia1)
                activate s1
                s1 -> mushroom : getLocation()
                activate mushroom
                return location = tecton
                s1 -> mycelia2 : getEnds()
                activate mycelia2
                return ends = [tecton, neighbor2]

                note over s1 : no mycelium to remove
                return

            return
            destroy mycelia1

            Dying -> mycelia2 : die()
            activate mycelia2
                mycelia2 -> Dying : removeMycelium(mycelia2)
                activate Dying
                return
                mycelia2 -> neighbor2 : removeMycelium(mycelia2)
                activate neighbor2
                return
                mycelia2 -> s1 : removeMycelium(mycelia2)
                activate s1
                s1 -> mushroom : getLocation()
                activate mushroom
                return location = tecton

                note over s1 : no mycelium to check or remove
                return
            return
            destroy mycelia2



    create "t1:Tecton" as New1
    Dying -> New1 : newMe()
    activate New1
    return
    Dying -> New1 : fillWithStuff([s1], m1, [i1], [neighbor1])
    activate New1

            participant "i1:Insect" as insect1

            New1 -> insect1 : setLocation(t1)
            activate insect1
            return

            New1 -> mushroom : setLocation(t1)
            activate mushroom
            return

            New1 -> neighbor1 : addNeighbor(t1)
            activate neighbor1
            return

            New1 -> New1 : addNeighbor(neighbor1)
            activate New1
            return

    return

    create "t2:Tecton" as New2
    Dying -> New2 : newMe()
    activate New2
    return

    Dying -> New2 : fillWithStuff([s2], null, [i2], [neighbor2])
    activate New2

            participant "i2:Insect" as insect2

            New2 -> insect2 : setLocation(t2)
            activate insect2
            return

            New2 -> neighbor2 : addNeighbor(t2)
            activate neighbor2
            return

            New2 -> New2 : addNeighbor(neighbor2)
            activate New2
            return

    return

return
destroy Dying

@enduml